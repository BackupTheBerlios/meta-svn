|[
	&union(<!"System.Drawing",SdlDotNet,SdlDotNet.Events,SdlDotNet.Key,OdeDotNet,
		SdlDotNet.Video.SetVideoModeWindow_Int32_Int32_Boolean(800,600,1)>);
	range=Meta.Library.Range_Number;
	repeat=times?value?mapping(
		range(times),
		?value?
	)??;
	vectorSum=a{b{mapping(keys(a),key{sum(a.<key>,b.<key>)})}};
	level=union(
		mapping(
			range(10),
			x?union(
				mapping(
					range(15),
					y?[
						<x,y>=0;
					]
				)
			)?
		)
	);
	pieces=<
		<<0,0>,<0,1>,<1,1>,<1,0>>,
		<<0,0>,<-1,-1>,<0,-1>,<1,0>>,
		<<0,0>,<1,-1>,<0,-1>,<-1,0>>,
		<<0,0>,<0,-1>,<0,-2>,<-1,0>>,
		<<0,0>,<0,-1>,<0,-2>,<1,0>>,
		<<0,0>,<0,1>,<0,2>,<0,3>>
	>;
	active=0;
	speed=0;
	position=0;
	makePiece=?[
		active:pieces.{random(1,length(pieces))};
		position:<7,3>;
		speed:1/5;
	]?;
	makePiece();
	draw=pos?color?[
		pos:vectorSum(pos,<10,5>);
		DrawFilledBox_Rectangle_Color(
			<
				vectorDotProduct(pos,20),
				vectorDotProduct(<sum(pos.1,1),sum(pos.2,1)>,20)
			>
			color
		);
	]??;
	move=vector?[
		position:vectorSum(position,vector);
	];
	checkPosition=pos?branch(less(pos.2,15),?level.{vectorSum(pos,<0,1>)}?,?1?)?;
	realPosition=?mapping(
		active,
		block?vectorSum(block,position)
	)?;
	x=?[
		Fill_Color(<0,0,0>);
		branch(
			greater(moved,1),
			?[move(<0,1>);moved:difference(moved,1);]?,
			?[moved:sum(moved,speed);]?
		);
		mapping(
			level,
			key?value?draw(
				key,
				branch(
					level.{key},
					?<0,255,0>?,
					?<255,0,0>?
				)
			)??
		);
		moveDown=pos?if(
			not(equal(1,pos.2)),
			?level.{vectorSum(pos,<0,-1>)}?
		)?;
		mapping(
			range(15),
			y?if(
				andAll(
					mapping(
						range(10),
						x?level.{<x,y>}?
					)
				),
				?[
					level:modify(
						level,
						key?value?branch(
							lessEqual(key.2,y),
							?moveDown(key)?,
							?value?
						)??
					);
				]?
			)?
		);
		branch(
			orAll(
				mapping(
					realPosition(),
					block?checkPosition(block)?
				)
			),
			?[
				level:union(level,union(mapping(realPosition(),block?[{block}=1;])));
				makePiece();
			]?,
			?0?
		);
		mapping(active,block?draw(vectorSum(position,block),<0,0,255>)?
		);
		Flip();
	]?;
	Keyboard.EnableKeyRepeat_Int32_Int32(10,10);
	music=Music_String("D:\Meta\grantgreen.wav");
	add_Tick_TickEventHandler(??x()??);
	if=condition?then?branch(condition,then,?0?)??;
	moved=0;
	keyDown=[
		{Key.Space}=?[active:mapping(active,block?<opposite(block.2),block.1>?);]?;
		{Key.LeftArrow}=?if(
			andAll(mapping(realPosition(),pos?greater(pos.1,1))),
			?move(<-1,0>)?
		)?;
		{Key.DownArrow}=?[speed:1;]?;
		{Key.RightArrow}=?if(
			andAll(mapping(realPosition(),pos?less(pos.1,10))),
			?move(<1,0>)?
		)?;
	];
	add_KeyboardDown_KeyboardEventHandler(?e?callKey(e.get_Key(),keyDown)??);
	Run();
];