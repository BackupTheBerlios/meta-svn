(k){
	accumulate=Meta.Library.Sum_Map_Map;
	try=Meta.Library.Try_Map_Map;
	contains=(arg)Meta.ObjectMap_Object(arg).ContainsKey_Map;
	test={
		booleanTest={
			not={
				true=boolean.not(0);
				false=boolean.not(1);
			};
			and={
				true=boolean.and(1,1);
				false=boolean.and(1,0);
			};
			orTest={
				true=boolean.or(1,1);
				false=boolean.or(0,0);
				otherTrue=boolean.or(0,1);
			};
		};
		numberTest={
			positiveAdd=rational.add(100,1000);
			negativeAdd=rational.add(-100,91);
			differenceTest=rational.add(1/4,rational.multiply(1/100,-1));
			differenceTest2=rational.subtract(103,2);
			divideTest=rational.divide(5,103);
			multiplyInteger=rational.multiply(19,1023);
			minusmultiply=rational.multiply(-1,-2);
			multiplyFraction=rational.multiply(3/2,7/3);
			smallerDecreasingTest=rational.less(4,1);
			strictlyIncreasingTest=rational.greater(23,23);
			smallerTest=rational.less(0,1);
			greaterTest=rational.greater(3,5);
			divide=rational.multiply(1000,rational.divide(1,7));
		};
		bitwiseTest={
			or=0;
		};
		mapTest={
			IfTest=flow.branch(
				1,
				(arg)"If,test,successful",
				()0
			);
			Map={
				&flow.apply(
					(argument)rational.add(argument,1),
					[1,2,3]
				);
			};
			keyTestMap={
				x="hello";
			};
			containsTest=contains(keyTestMap,"x");
			keysTest=map.keys(
				{
					jjqwv="aeäquq";
					oere="i,ke";
					1="oiq";
				}
			);
			equal={
				map={
					true=map.equal(
						{
							x="hello";
							y="world";
						},
						{
							x="hello";
							y="world";
						}
					);
					false=map.equal(
						{
							x="y";
							y="z";
						},
						{
							x="y";
							y="a";
						}
					);
				};
			};
			tryTest=try(
				(arg)"hello",
				(argument)argument.rational.toString(0)
			);
		};
		sumTest=accumulate(
			(first)(second)rational.add(first,second),
			[2,5,6,8]
		);
		lengthTest=array.length([1,2,3,4,5]);
		withTest=!"System.Windows.Forms".Form(
			{
				Text="hello,world";
			}
		);
		countTest=map.count(
			{
				orange="orange";
				banana="yellow";
				apple="red";
				strawberries="red";
			}
		);
	};
	&test;
}