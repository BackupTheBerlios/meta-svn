integer "0123456789"
codeKeys
	parameterName "parameterName"
	root "root"
	search "search"
	lookup "lookup"
	current "current"
	scope "scope"
	literal "literal"
	function "function"
	call "call"
	callable "callable"
	argument "argument"
	select "select"
	program "program"
	key "key"
	value "value"
text|
	syntax
		autokey '.'
		callStart '('
		callEnd ')'
		root '/'
		search '$'
		negative '-'
		fraction "/"
		endOfFile 65535
		indentation "\t"
		unixNewLine "\n"
		windowsNewLine "\r\n"
		function '|'
		string '"'
		lookupStart '['
		lookupEnd ']'
		emptyMap '0'
		call ' '
		select '.'
		character "'"
		assignment ' '
		space ' '
		tab "\t"
		mapCurrent "current"
		integer "0123456789"
		lookupStringForbidden
			. call
			. indentation
			. "\r"
			. "\n"
			. assignment
			. select
			. function
			. string
			. lookupStart
			. lookupEnd
			. emptyMap
			. search
			. root
			. callStart
			. callEnd
			. character
	number rule
		condition
			text|
				matched apply
					array text
					condition
						char|contains
							array integer
							value char
					function
						arg|arg
				current if
					condition not equal
						. matched
						. 0
					then
						|
							result matched
							rest slice
								array text
								start add
									. length matched
									. 1
		result
			text|/.Meta.Number.Parse text
	untested "!!!!!!"
	newline alternatives
		. character syntax.unixNewLine
		. stringRule syntax.windowsNewLine
	endOfLine sequence
		. zeroOrMore alternatives
			. character syntax.space
			. character syntax.tab
		. newline
	indentation alternatives
		.
			text|if
				condition startOfFile
				then
					|
						$startOfFile 0
						result 0
						rest text
		. sequence
			. endOfLine
			. 
				text|nTimes
					n add
						. indentationCount
						. 1
					rule character syntax.indentation
	untested "!!!!!!"
	stringCharacter characterExcept syntax.string
	stringTest prePost
		pre character syntax.string
		rule zeroOrMore stringCharacter
		post character syntax.string
	string rule
		condition
			text|
				current if
					condition 1
					then
						|
							result text
							rest slice
								array text
								start add
									. length text
									. 1
		result
			text|text
	expression sequence
		. number
		. string
	parsed stringTest "
		"12344321 asdfasdf "
	"
	current parsed.result
character
	documentation "Matches one character."
	char|rule
		condition
			text|if
				condition not zero text
				then
					|if
						condition equal
							. first text
							. char
						then
							|
								result first text
								rest slice
									array text
									start 2
		result
			char|char
characterExcept
	documentation "Matches one character that is not the provided character."
	char|rule
		condition
			text|if
				condition not zero text
				then
					|if
						condition not equal
							. first text
							. char
						then
							|
								result first text
								rest slice
									array text
									start 2
		result
			char|char
stringRule
	documentation "Matches the provided sequence of characters."
	string|sequence apply
		array string
		function
			char|character char
zeroOrMore
	documentation "Matches zero or more times."
	rule|
		text|
			rest text
			result while
				condition
					|not zero rule rest
				function
					|
						ruleResult rule rest
						$rest ruleResult.rest
						current ruleResult.result
sequence
	documentation "Matches a sequence of rules."
	rules|
		text|
			matched 0
			rest text
			applied apply
				array rules
				function
					rule|
						ruleResult rule rest
						. if
							condition hasKey
								map ruleResult
								key "result"
							then
								|
									$rest ruleResult.rest
									$matched join
										. matched
										.
											. ruleResult.result
			result if
				condition equal
					. length applied
					. length rules
				then
					|
						result matched

prePost
	documentation "Matches a rule and throws away the results of a preceding and a following rule."
	arg|
		text|
			preResult arg.pre text
			current if
				condition not zero preResult
				then
					|
						ruleResult arg.rule preResult.rest
						current if
							condition not zero ruleResult
							then
								|
									postResult arg.post ruleResult.rest
									current if
										condition not zero postResult
										then
											|
												result ruleResult.result
												rest postResult.rest
alternatives
	documentation "Matches one of several alternative rules."
	alts|
		text|
			result 0
			. apply
				array alts
				condition
					alt|
						applied alt text
						current if
							condition not zero applied
							then
								|
									$result applied.result
									current 0
							else
								|1
				function
					|0
rule
	documentation "A rule returns the result in 'result' or an empty map, if the rule did not match."
	arg|
		text|
			map arg.condition text
			stuff if
				condition hasKey
					map map
					key "result"
				then
					|
						result arg.result map.result
						rest map.rest
			current stuff