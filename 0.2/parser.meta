integer "0123456789"
syntax
	string '"'
text|
	number rule
		condition
			text|
				matched apply
					array text
					condition
						char|contains
							array integer
							value char
					function
						arg|arg
				current if
					condition not equal
						. matched
						. 0
					then
						|
							result matched
							rest slice
								array text
								start add
									. length matched
									. 1
		result
			text|/.Meta.Number.Parse text
	string rule
		condition
			text|
				. print text
				current if
					condition 1
					then
						|
							result text
							rest slice
								array text
								start add
									. length text
									. 1
		result
			text|text
	expression sequence
		. number
		. number
	parsed expression "12344321 asdfasdf "
	current parsed.result
sequence
	documentation "Returns the concatenated results of all rules in 'result', if all rules matched, or nothing."
	rules|
		text|
			matched 0
			rest text
			applied apply
				array rules
				function
					rule|
						ruleResult rule rest
						. print ruleResult
						. if
							condition hasKey
								map ruleResult
								key "result"
							then
								|
									$rest ruleResult.rest
									$matched join
										. matched
										.
											. ruleResult.result
			result if
				condition equal
					. length applied
					. length rules
				then
					|
						result matched
alternatives
	documentation "Returns the result of the first rule that matched in 'result', or nothing."
	alts|
		text|
			result 0
			. apply
				array alts
				condition
					alt|
						applied alt text
						current if
							condition not zero applied
							then
								|
									$result applied.result
									current 0
							else
								|1
				function
					|0
rule
	documentation "A rule returns the result in 'result' or nothing, if the rule did not match."
	arg|
		text|
			map arg.condition text
			stuff if
				condition hasKey
					map map
					key "result"
				then
					|
						result arg.result map.result
						rest map.rest
			. print stuff
			current stuff