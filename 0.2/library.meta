|,
	containsKey=,
		arg|.
			-
				.
					/
					Meta
					Map_Object
				arg
			ContainsKey_Map
	add=.
		/
		Meta
		Number
		op_Addition_Number_Number
	addArray=,
		a|,
			b|-
				apply
				-
					keys
					a
				,
					key|-
						add
						.
							a
							<key
						.
							b
							<key
	divide=.
		/
		Meta
		Number
		op_Division_Number_Number
	divideAll=,
		array|,
			number|-
				apply
				array
				,
					item|-
						divide
						item
						number

	subtract=.
		/
		Meta
		Number
		op_Subtraction_Number_Number
	greater=.
		/
		Meta
		Number
		op_GreaterThan_Number_Number
	less=.
		/
		Meta
		Number
		op_LessThan_Number_Number
	greaterOrEqual=.
		/
		Meta
		Number
		op_GreaterThanOrEqual_Number_Number
	lessOrEqual=.
		/
		Meta
		Number
		op_LessThanOrEqual_Number_Number
	maximum=,
		a|,
			b|.
				,
					1=a
					0=b
				-
					greater
					a
					b
	minimum=,
		a|,
			b|.
				,
					1=a
					0=b
				-
					smaller
					a
					b
	bitwiseOr=.
		/
		Meta
		Number
		op_BitwiseOr_Number_Number
	and=,
		a|,
			b|-
				.
					,
						1=,
							|b
						0=,
							|0
					<a
	integerToString=,
		arg|-
			.
				-
					.
						/
						Meta
						Map_Object
					arg
				ToString
	count=,
		arg|.
			-
				.
					/
					Meta
					Map_Object
				arg
			Count
	equal=,
		arg|.
			-
				.
					/
					Meta
					Map_Object
				arg
			Equals_Object
	isNumber=,
		arg|.
			-
				.
					/
					Meta
					Map_Object
				arg
			IsNumber
	isString=,
		arg|.
			-
				.
					/
					Meta
					Map_Object
				arg
			IsString
	joinAll=,
		arg|-
			sum
			arg
			join
	keys=,
		arg|-
			.
				/
				Meta
				<"Map_ICollection`1"
			.
				-
					.
						/
						Meta
						Map_Object
					arg
				Keys
	length=,
		arg|.
			-
				.
					/
					Meta
					Map_Object
				arg
			ArrayCount
	mergeAll=,
		arg|-
			sum
			arg
			merge
	minus=,
		arg|-
			subtract
			0
			arg
	modulus=.
		/
		Meta
		Number
		op_Modulus_Number_Number
	multiply=.
		/
		Meta
		Number
		op_Multiply_Number_Number
	not=,
		arg|.
			,
				0=1
				1=0
			<arg
	orAll=,
		arg|-
			sum
			arg
			or
	or=,
		a|,
			b|-
				.
					,
						1=,
							|1
						0=,
							|b
					<a
	print=,
		arg|-
			writeLine
			-
				toString
				arg
	toString=.
		/
		Meta
		Serialize
		ValueFunction_Map
	values=,
		arg|-
			apply
			-
				keys
				arg
			,
				key|.
					arg
					!"key"
	writeLine=,
		arg|-
			.
				/
				mscorlib
				Console
				WriteLine_String
			arg
	readLine=,
		arg|-
			.
				/
				mscorlib
				Console
				ReadLine
	append=.
		/
		Meta
		Library
		Append_Map_Map
	prepend=,
		array|,
			item|-
				join
				+
					item
				array
	while=,
		condition|,
			do|,
				start|,
					helper=,
						value|-
							.
								,
									0=,
										|0
									1=,
										|,
											item=-
												do
												value
											&=-
												append
												-
													helper
													item
												item
								-
									condition
									value
					&=-
						helper
						start
	apply=,
		array|,
			func|,
				helper=,
					index|,
						result|-
							.
								,
									0=,
										|result
									1=,
										|-
											helper
											-
												add
												1
												index
											-
												append
												result
												-
													func
													.
														array
														<index
								-
									lessOrEqual
									index
									-
										length
										array
				&=-
					helper
					1
					0
	callIf=,
		map|,
			key|,
				func|-
					.
						,
							0=,
								|0
							1=,
								|-
									func
									.
										map
										<key
						-
							containsKey
							map
							key
	foreach=,
		map|,
			func|-
				apply
				-
					keys
					map
				,
					key|-
						func
						key
						.
							map
							<key
	rest=,
		arg|-
			apply
			-
				range
				-
					subtract
					-
						length
						arg
					1
			,
				index|.
					arg
					-
						add
						1
						index
	join=.
		/
		Meta
		Library
		Join_Map_Map
	sum=,
		array|,
			func|-
				.
					,
						1=,
							|0
						0=,
							|,
								helper=,
									index|,
										result|-
											.
												,
													0=,
														|result
													1=,
														|-
															helper
															-
																add
																1
																index
															-
																func
																result
																.
																	array
																	<index
												-
													lessOrEqual
													index
													-
														length
														array
								&=-
									helper
									2
									.
										array
										1
					-
						equal
						0
						-
							length
							array
	range=.
		/
		Meta
		Library
		Range_Map
	reverse=.
		/
		Meta
		Library
		Reverse_Map
	parseFile=.
		/
		Meta
		Parser
		Parse_String
	parse=,
		arg|-
			.
				/
				Meta
				Parser
				ParseString_String_String
			arg
			"in memory"
	if=,
		condition|,
			then|-
				ifElse
				condition
				then
				,
					|0
	ifElse=,
		condition|,
			then|,
				else|-
					.
						,
							0=else
							1=then
						<condition
	merge=,
		first|,
			second|,
				keys=-
					keys
					second
				length=-
					length
					second
				helper=,
					result|,
						index|-
							ifElse
							-
								lessOrEqual
								index
								length
							,
								|-
									helper
									,
										&=result
										.
											keys
											!"index"
										=.
											second
											.
												keys
												!"index"
									-
										add
										1
										index
							,
								|result
				&=-
					helper
					first
					1
	merge=.
		/
		Meta
		Library
		Merge_Map_Map
	enumerableToArray=.
		/
		Meta
		Library
		EnumerableToArray_Map
	try=.
		/
		Meta
		Library
		Try_Map_Map