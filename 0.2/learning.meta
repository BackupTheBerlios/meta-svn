|,
	&=mergeAll +
		MathML
		!"MathML.Rendering"
		System
		mscorlib
		!"System.Windows.Forms"
		!"System.Drawing"
	printNodes=nodes?data?depth?-
		JoinAll
		Map data entry?-
			JoinAll
			Map (enumerableToArray nodes) node?If (node.get_Checked) ?,
				key=(node.get_Text
				&=If (Contains entry key) ?,
					value=entry.<key
					&=ElseIf
						isString value
						?+
							,
								type=ElseIf
									Contains data key
									?,
										name=(keys data.<key>).1
										value=data.<key>.<name
									?,
										name="rtf"
										value=0
								margin=Padding_Int32_Int32_Int32_Int32 (Product depth 10) 10 0 0
								types=,
									mathml=?MathMLControl,
										Margin=margin
										Height=80
										Width=500
										BackColor=(Color.get_White
										MathElement=,
											document=(MathMLDocument
											document.LoadXml_String value
											&=(document.get_DocumentElement
									rtf=?node.AddCheckChanged (RichTextBox,
										Margin=margin
										Width=500
										Font=Font_String_Single "Arial" 10
										KeyDown=?e?e.set_Handled_Boolean 1
										KeyPress=?e?e.set_Handled_Boolean 1
										BorderStyle=BorderStyle.None
										ContentsResized=sender?e?sender.set_Height_Int32 ((e.get_NewRectangle).get_Height
										Rtf=JoinAll +
											"{\rtf1\ansi{\fonttbl\f0\fswiss Helvetica;}\f0{"
											If (Contains data key) ?data.<key>.rtf
											value
											"}"
								&=(types.<type.name
						?+
							,
								children=printNodes (node.get_Nodes) value (add depth 1)
								p=FlowLayoutPanel,
									BackColor=(Color.get_White
									WrapContents=0
									AutoSize=1
									FlowDirection=FlowDirection.TopDown
									Dock=DockStyle.Fill
								controls=(p.get_Controls
								controls.<"AddRange_Control[]"> children
								node.AddCheckChanged p
								Map (enumerableToArray (node.get_Nodes)) asdf?asdf.AddSuspend p
								&=p
	data=0
	getNodes=data?Map (keys (mergeAll data)) key?,
		&=TreeNode,
			CheckChanged=0
			Text=key
			Checked=1
			Nodes=getNodes (JoinAll (Map data map?If
				Contains map key
				?.
					,
						1=0
						0=map.<key
					isString map.<key
		suspend=0
		AddSuspend=panel?,
			suspend:append suspend panel
		AddCheckChanged=func?,
			CheckChanged:append CheckChanged func
			&=func
	load=file?,
		data:Meta.Parser.Parse_String file
		(tree.get_Nodes).<"AddRange_TreeNode[]" (getNodes data
		(loadText
	loadText=?,
		controls=(panel.get_Controls
		result=printNodes (tree.get_Nodes) data 0
		(controls.Clear
		controls.<"AddRange_Control[]" result
	tree=TreeView,
		Width=200
		Dock=DockStyle.Left
		CheckBoxes=1
		AfterCheck=?e?,
			node=(e.get_Node
			(panel.SuspendLayout
			Map node.suspend p?(p.SuspendLayout
			Map node.CheckChanged control?control.set_Visible_Boolean node.get_Checked
			Map node.suspend p?(p.ResumeLayout
			(panel.ResumeLayout
	panel=FlowLayoutPanel,
		BackColor=(Color.get_White
		WrapContents=0
		AutoScroll=1
		FlowDirection=FlowDirection.TopDown
		Dock=DockStyle.Fill
	form=Form,
		Size=Size_Int32_Int32 800 600
		Text="Learning"
		Controls=+
			panel
			Splitter,
				Dock=DockStyle.Left
			tree
		Load=??load "D:\Meta\0.2\relativity.learn"
		Menu=-
			<"MainMenu_MenuItem[]"
			+
				MenuItem,
					Text="File"
					MenuItems=+
						MenuItem,
							Text="Open..."
							Click=??-
								.
									,
										&=(OpenFileDialog
										Filter="*.learn (Learning files)|*.learn"
										FileOk=dialog??load (dialog.get_FileName
									ShowDialog
						MenuItem,
							Text="Exit"
							Click=??(form.Close
	Application.Run_Form form
	print "end"