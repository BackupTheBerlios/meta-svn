this=meta.Merge(parent,('AssignedToCurrent'))
'ImpliedAutokey'
='Autokey'
commandLineArguments=arg
[(['a']='a')]='Object'
['normal symbol']='NormalSymbol'
lookupSymbol='LookupSymbol'
['"long key symbol"']='LookupExtendedSymbol'
lookedUpMap=[(['a']='a')]
lookedUpNormalSymbol=['normal symbol']
lookedUpSymbol=lookupSymbol
lookedUpLongSymbol=['"long key symbol"']
object=
  a='default'
  autoSearch='default'
  b=()
  SetA==
    parent.parent.a='c'
    #autoSearch='changed'
  SetB==
    caller.b.1=arg.value
    this='changed'
  x=
    a='b'
    c='d'
  ==
    this.a='b'
a='default'
b=()
aSet=object.SetA ()
bSet=object.SetB(value=(x='7',z='1'))
ReturnEverything==
  this=arg
everythingReturned=ReturnEverything('a','b','c')
argument=('x','y','z')
variableAsArgument=ReturnEverything argument
ReturnFunction==
  this==
    this=('1','2','3')
SetCurrent==
  this=(arg=arg,x=arg.symbol)
  this=x
thisSet=SetCurrent(symbol='haha')
Load('Test')
testClass=TestClass()
memberTest=MemberTest()
MemberTest.classField='a'
memberTest.instanceField='b'
MemberTest.ClassProperty=memberTest.InstanceProperty
memberTest.InstanceProperty=MemberTest.ClassProperty
interceptedSymbol='/hello/'
positionalNoConversion=PositionalNoConversion('m','n','o')
positionalNoConversionConcatenated=positionalNoConversion.Concatenate('r','s','t')
namedNoConversion=NamedNoConversion('m',y='n')
namedNoConversionConcatenated=namedNoConversion.Concatenate(c='t','r')
indexerNoConversion=IndexerNoConversion()
indexerNoConversion.abc='hihi'
indexerNoConversionIndexed=indexerNoConversion.abc
interceptedSymbol2='1'
k='hello'
xyz='w'
literalFunction=='5'
literalFunctionResult=literalFunction()
function==
  this='simple function this'
callFunction==function
callFunctionResult=callFunction ()
delayedFunction===(x='y')
delayedFunctionResult=delayedFunction ()
value='xyz'
selectionFunction==value
selectionFunctionResult=selectionFunction ()
bigInteger='89383838383832839123497123047217340712340720347072304702340720347'
upperLevel='unchanged'
ChangeUpperLevel==
  #upperLevel='changed'
ChangeUpperLevel()
staticEventChanged='false'
TestClass.staticEvent==
  #staticEventChanged='true'
  this=arg.1
staticEvent=TestClass.staticEvent
staticEventResult=TestClass.staticEvent(testClass)
instanceEventChanged='false'
testClass.instanceEvent==
  #instanceEventChanged='true'
  this=arg.1
instanceEvent=testClass.instanceEvent
instanceEventResult=testClass.instanceEvent('5')
one='1'
two='2'
firstIf='unchanged'
secondIf='unchanged'
thenText='then'
If
  Equal('1',one)
  then==
    #firstIf=thenText
  else==
    #firstIf='else'
If
  Equal('1',two)
  then==
    #secondIf='then'
  else==
    #secondIf='else'
firstSwitch='unchanged'
bigNumber='50020202029029233344'
Switch
  bigNumber
  case=
    [bigNumber]==
      #firstSwitch=bigNumber
  default==
    #firstSwitch='default'
secondSwitch='unchanged'
Switch
  '3'
  case=
    1==
      #secondSwitch='one'
    2==
      #secondSwitch='two'
  default==
    #secondSwitch='default'