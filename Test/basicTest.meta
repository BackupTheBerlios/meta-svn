result=meta.Merge(parent,('AssignedToCurrent'))
'ImpliedAutokey'
='Autokey'
result.commandLineArguments=arg
result.[(['a']='a')]='Object'
result.['normal symbol']='NormalSymbol'
result.lookupSymbol='LookupSymbol'
result.['"long key symbol"']='LookupExtendedSymbol'
result.lookedUpMap=[(['a']='a')]
result.lookedUpNormalSymbol=['normal symbol']
result.lookedUpSymbol=lookupSymbol
result.lookedUpLongSymbol=['"long key symbol"']
result.object=
  a='default'
  autoSearch='default'
  b=()
  SetA=-
    parent.parent.a='c'
    autoSearch='changed'
  SetB=-
    caller.b.1=arg.value
    result='changed'
  x=
    a='b'
    c='d'
  =-
    result.a='b'
result.a='default'
result.b=()
result.aSet=object.SetA ()
result.bSet=object.SetB(value=(x='7',z='1'))
result.ReturnEverything=-
  result=arg
result.everythingReturned=ReturnEverything('a','b','c')
result.argument=('x','y','z')
result.variableAsArgument=ReturnEverything argument
result.ReturnFunction=-
  result=-
    result=('1','2','3')
result.SetCurrent=-
  result=(arg=arg,x=arg.symbol)
  result=x
result.resultSet=SetCurrent(symbol='haha')
result=meta.Merge(parent,assemblies.Test.Test)
result.testClass=TestClass()
result.memberTest=MemberTest()
result.MemberTest.classField='a'
result.memberTest.instanceField='b'
result.MemberTest.ClassProperty=memberTest.InstanceProperty
result.memberTest.InstanceProperty=MemberTest.ClassProperty
result.interceptedSymbol='/hello/'
result.positionalNoConversion=PositionalNoConversion('m','n','o')
result.positionalNoConversionConcatenated=positionalNoConversion.Concatenate('r','s','t')
result.namedNoConversion=NamedNoConversion('m',y='n')
result.namedNoConversionConcatenated=namedNoConversion.Concatenate(c='t','r')
result.indexerNoConversion=IndexerNoConversion()
result.indexerNoConversion.abc='hihi'
result.indexerNoConversionIndexed=indexerNoConversion.abc
result.interceptedSymbol2='1'
result.k='hello'
result.xyz='w'
result.literalFunction= -'5'
result.literalFunctionResult=literalFunction()
result.function=-
  result='simple function result'
result.callFunction=-function
result.callFunctionResult=callFunction ()
result.delayedFunction= --(x='y')
result.delayedFunctionResult=delayedFunction ()
result.value='xyz'
result.selectionFunction= -value
result.selectionFunctionResult=selectionFunction ()
result.bigInteger='89383838383832839123497123047217340712340720347072304702340720347'
result.upperLevel='unchanged'
result.ChangeUpperLevel=-
  upperLevel='changed'
result.ChangeUpperLevel()
files.['test.txt']='"changed text from file"'
result.fileText=files.['test.txt']
files.['test.txt']='"unchanged text"'
result.staticEventChanged='false'
TestClass.staticEvent=-
  staticEventChanged='true'
  result=arg.1
result.staticEvent=TestClass.staticEvent
result.staticEventResult=TestClass.staticEvent(testClass)
result.instanceEventChanged='false'
testClass.instanceEvent=-
  instanceEventChanged='true'
  result=arg.1
result.instanceEvent=testClass.instanceEvent
result.instanceEventResult=testClass.instanceEvent('5')