{[
	&merge(<System,mscorlib,OdeDotNet,PresentationCore,PresentationFramework,
		WindowsBase>);
	contains={Meta.ObjectMap_Object(@).ContainsKey_Map};
	random=Meta.Library.Random_Int32_Int32;
	range=Meta.Library.Range_Number;
	vectorLength=vector{power(sum(power(vector.1,2),power(vector.2,2)),1/2)};
	vectorDifference=a{b{map(key{difference(a.<key>,b.<key>)},keys(a))}};
	compareNumber=Meta.Library.CompareNumber_Number_Number;
	callKey=key{map{branch(contains(map,key),{map.<key>()},{0})}};
	world=World();
	vectorDotProduct=vector{number{map(entry{product(<number,entry>)},vector)}};
	productVector=a{b{map(index{product(<a.<index>,b.<index>>)},range(length(a)))}};
	vectorProduct=productVector;
	space=Space_SpaceType(SpaceType.HashSpace);
	sort=Meta.Library.Sort_Map_Map;
	createBox=space.CreateBox_Single_Single_Single;
	vector=Vector3_Single_Single_Single;
	makeBox=size{position{[
		box=createBox(size.1,size.2,size.3);
		box.set_Position_Vector3(vector(position.1,position.2,position.3));
	]}};
	makeBox(<798,50,100>,<400,0,0>);
	makeBox(<798,50,100>,<400,600,0>);
	makeBox(<50,598,100>,<0,300,0>);
	makeBox(<50,598,100>,<800,300,0>);
	canvas=Canvas();
	bubble=size{[
		body=Body_World(world);
		radius={product(size,4)};
		body.set_Mass_Mass(Mass.Sphere_Single_Single(product(size,size),1/1000));
		position=<random(1,790),random(1,590)>;
		body.set_Position_Vector3(Vector3_Single_Single_Single(position.1,position.2,0));
		geom=space.CreateSphere_Single(radius());
		geom.set_Position_Vector3(body.get_Position());
		geom.set_Body_Body(body);
		speed=<random(-6,6),random(-6,6)>;
		body.set_LinearVel_Vector3(Vector3_Single_Single_Single(speed.1,speed.2,0));
		color=Brushes.get_Red();
		setColor=c{[color:c;]};
		GetPosition={[
			pos=body.get_Position();
			&<pos.get_X(),pos.get_Y()>;
		]};
		ellipse=Ellipse([
			Width=product(2,radius());
			Height=product(2,radius());
			Fill=Brushes.get_Red();
			Canvas.LeftProperty=GetPosition().1;
			Canvas.TopProperty=GetPosition().2;
		]);
		canvas.get_Children().Add_UIElement(ellipse);
	]};
	jointGroup=JointGroup_Int32(0);
	currentBubble=0;
	line=Line([
		Canvas.LeftProperty=0;
		Canvas.RightProperty=0;
	]);
	line.set_Stroke_Brush(Brushes.get_Black());
	line.set_StrokeThickness_Double(2);
	line.set_X1_Double(100);
	line.set_Y1_Double(100);
	line.set_X2_Double(200);
	line.set_Y2_Double(200);
	line.set_Visibility_Visibility(Visibility.Visible);
	setCurrentBubble=b{[currentBubble:b;]};
	player=c{[
		&bubble(1);
		setColor(c);
		currentJoint=0;
		setCurrentJoint=joint{[currentJoint:joint;]};
		toVector=v{Vector3_Single_Single_Single(v.1,v.2,0)};
	]};
	paused=0;
	contactGroup=JointGroup_Int32(0);
	enumerableToArray=Meta.Library.EnumerableToArray_Map;
	space.add_Collision_CollisionEventHandler({e{[
		a=e.get_Geom1();
		b=e.get_Geom2();
		map(
			contactGeom{[
				contact=world.CreateContactJoint_Contact_JointGroup(
					Contact([Geom=contactGeom;]),
					contactGroup
				);
				contact.Attach_Body_Body(a.get_Body(),b.get_Body());
			]},
			enumerableToArray(a.Collide_Geom_Int32(b,13))
		);
	]}});
	bubbles=join(<
		map({bubble(random(1,5))},range(3))
	>);
	p=player();
	window=Window([
		Content=canvas;
		Title="Weird game";
		Background=Brushes.get_Yellow();
	]);
	window.add_KeyUp_KeyEventHandler({e{if(
		equal(e.get_Key(),Key.Enter),
		{[
			jointGroup.Empty();
			currentBubble:0;
			line.set_Visibility_Visibility(Visibility.Hidden);
		]}
	)}});
	window.add_KeyDown_KeyEventHandler({e{[
		if(
			and(equal(e.get_Key(),Key.Enter),equal(currentBubble,0)),
			{[
				lengths=map(
					b{vectorLength(vectorDifference(p.GetPosition(),b.GetPosition()))},
					bubbles
				);
				sorted=sort(keys(bubbles),a{b{compareNumber(lengths.<a>,lengths.<b>)}});
				index=sorted.1;
				bubble=bubbles.<index>;
				currentBubble:bubble;
				joint=HingeJoint_World_JointGroup(world,jointGroup);
				joint.Attach_Body_Body(bubble.body,p.body);
				joint.set_Anchor_Vector3(bubble.body.get_Position());
				setCurrentBubble(bubble);
				pos1=bubble.GetPosition();
				pos2=p.GetPosition();
				line.set_X1_Double(pos1.1);
				line.set_Y1_Double(pos1.2);
				line.set_X2_Double(pos2.1);
				line.set_Y2_Double(pos2.2);
				line.set_Visibility_Visibility(Visibility.Visible);
			]}
		);
	]}});
	canvas.get_Children().Add_UIElement(line);
	timer=DispatcherTimer_DispatcherPriority(DispatcherPriority.Normal);
	timer.set_Interval_TimeSpan(TimeSpan_Int64(10000));
	timer.add_Tick_EventHandler(
		{{[
			contactGroup.Empty();
			space.CheckCollisions();
			world.Step();
			map(
				a{[
					pos=a.GetPosition();
					Canvas.SetLeft_UIElement_Double(a.ellipse,difference(pos.1,a.radius()));
					Canvas.SetTop_UIElement_Double(a.ellipse,difference(pos.2,a.radius()));
				]},
				join(<bubbles,<p>>)
			);
			if(
				not(equal(0,currentBubble)),
				{[
					print("hello!!!!!");
			pos1=currentBubble.GetPosition();
			pos2=p.GetPosition();
			line.set_X1_Double(pos1.1);
			line.set_Y1_Double(pos1.2);
			line.set_X2_Double(pos2.1);
			line.set_Y2_Double(pos2.2);
			]});

		]}}
	);
	window.add_Loaded_RoutedEventHandler({{timer.Start()}});
	Application().Run_Window(window);
]}